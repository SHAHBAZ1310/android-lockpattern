group.pals.android.lib.ui.lockpattern.LockPatternActivity -> group.pals.android.lib.ui.lockpattern.LockPatternActivity:
    java.lang.String CLASSNAME -> j
    java.lang.String ACTION_CREATE_PATTERN -> a
    java.lang.String ACTION_COMPARE_PATTERN -> b
    java.lang.String ACTION_VERIFY_CAPTCHA -> c
    java.lang.String EXTRA_RETRY_COUNT -> d
    java.lang.String EXTRA_THEME -> e
    java.lang.String EXTRA_PATTERN -> f
    java.lang.String EXTRA_RESULT_RECEIVER -> g
    java.lang.String EXTRA_OK_PENDING_INTENT -> h
    java.lang.String EXTRA_CANCELLED_PENDING_INTENT -> i
    int mMaxRetry -> k
    boolean mAutoSave -> l
    group.pals.android.lib.ui.lockpattern.util.IEncrypter mEncrypter -> m
    int mMinWiredDots -> n
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand mBtnOkCmd -> o
    android.content.Intent mIntentResult -> p
    android.widget.TextView mTextInfo -> q
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView mLockPatternView -> r
    android.view.View mFooter -> s
    android.widget.Button mBtnCancel -> t
    android.widget.Button mBtnConfirm -> u
    int mRetryCount -> v
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$OnPatternListener mLockPatternViewListener -> w
    android.view.View$OnClickListener mBtnCancelOnClickListener -> x
    android.view.View$OnClickListener mBtnConfirmOnClickListener -> y
    java.lang.Runnable mLockPatternViewReloader -> z
    int[] $SWITCH_TABLE$group$pals$android$lib$ui$lockpattern$LockPatternActivity$ButtonOkCommand -> A
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initContentView() -> b
    char[] encodePattern(java.util.List) -> a
    void doComparePattern(java.util.List) -> b
    void doCheckAndCreatePattern(java.util.List) -> c
    void finishWithResultOk(char[]) -> a
    void finishWithNegativeResult(int) -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView access$0(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> a
    java.lang.Runnable access$1(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> b
    android.widget.TextView access$2(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> c
    android.widget.Button access$3(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> d
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand access$4(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> e
    void access$5(group.pals.android.lib.ui.lockpattern.LockPatternActivity,java.util.List) -> a
    void access$6(group.pals.android.lib.ui.lockpattern.LockPatternActivity,java.util.List) -> b
    void access$7(group.pals.android.lib.ui.lockpattern.LockPatternActivity,int) -> a
    void access$8(group.pals.android.lib.ui.lockpattern.LockPatternActivity,group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand) -> a
    boolean access$9(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> f
    void access$10(group.pals.android.lib.ui.lockpattern.LockPatternActivity,char[]) -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$OnPatternListener access$11(group.pals.android.lib.ui.lockpattern.LockPatternActivity) -> g
    int[] $SWITCH_TABLE$group$pals$android$lib$ui$lockpattern$LockPatternActivity$ButtonOkCommand() -> a
group.pals.android.lib.ui.lockpattern.LockPatternActivity$1 -> group.pals.android.lib.ui.lockpattern.a:
    group.pals.android.lib.ui.lockpattern.LockPatternActivity this$0 -> a
    void onPatternStart() -> a
    void onPatternDetected(java.util.List) -> a
    void onPatternCleared() -> b
    void onPatternCellAdded(java.util.List) -> b
group.pals.android.lib.ui.lockpattern.LockPatternActivity$2 -> group.pals.android.lib.ui.lockpattern.b:
    group.pals.android.lib.ui.lockpattern.LockPatternActivity this$0 -> a
    void onClick(android.view.View) -> onClick
group.pals.android.lib.ui.lockpattern.LockPatternActivity$3 -> group.pals.android.lib.ui.lockpattern.c:
    group.pals.android.lib.ui.lockpattern.LockPatternActivity this$0 -> a
    void onClick(android.view.View) -> onClick
group.pals.android.lib.ui.lockpattern.LockPatternActivity$4 -> group.pals.android.lib.ui.lockpattern.d:
    group.pals.android.lib.ui.lockpattern.LockPatternActivity this$0 -> a
    void run() -> run
group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand -> group.pals.android.lib.ui.lockpattern.e:
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand CONTINUE -> a
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand DONE -> b
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand[] ENUM$VALUES -> c
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand[] values() -> values
    group.pals.android.lib.ui.lockpattern.LockPatternActivity$ButtonOkCommand valueOf(java.lang.String) -> valueOf
group.pals.android.lib.ui.lockpattern.R -> group.pals.android.lib.ui.lockpattern.f:
group.pals.android.lib.ui.lockpattern.R$attr -> group.pals.android.lib.ui.lockpattern.g:
    int alp_button_bar_button_style -> alp_button_bar_button_style
    int alp_button_bar_style -> alp_button_bar_style
    int alp_color_pattern_path -> alp_color_pattern_path
    int alp_drawable_btn_code_lock_default_holo -> alp_drawable_btn_code_lock_default_holo
    int alp_drawable_btn_code_lock_touched_holo -> alp_drawable_btn_code_lock_touched_holo
    int alp_drawable_indicator_code_lock_point_area_default_holo -> alp_drawable_indicator_code_lock_point_area_default_holo
    int alp_theme_dialog -> alp_theme_dialog
    int aosp_drawable_indicator_code_lock_point_area_normal -> aosp_drawable_indicator_code_lock_point_area_normal
group.pals.android.lib.ui.lockpattern.R$bool -> group.pals.android.lib.ui.lockpattern.h:
    int alp_is_large_screen -> alp_is_large_screen
    int alp_pkey_display_stealth_mode_default -> alp_pkey_display_stealth_mode_default
    int alp_pkey_sys_auto_save_pattern_default -> alp_pkey_sys_auto_save_pattern_default
group.pals.android.lib.ui.lockpattern.R$dimen -> group.pals.android.lib.ui.lockpattern.i:
    int alp_lockpatternview_size -> alp_lockpatternview_size
    int alp_separator_size -> alp_separator_size
    int aosp_dialog_fixed_height_major -> aosp_dialog_fixed_height_major
    int aosp_dialog_fixed_height_minor -> aosp_dialog_fixed_height_minor
    int aosp_dialog_fixed_width_major -> aosp_dialog_fixed_width_major
    int aosp_dialog_fixed_width_minor -> aosp_dialog_fixed_width_minor
group.pals.android.lib.ui.lockpattern.R$drawable -> group.pals.android.lib.ui.lockpattern.j:
    int alp_btn_code_lock_default_holo_dark -> alp_btn_code_lock_default_holo_dark
    int alp_btn_code_lock_default_holo_light -> alp_btn_code_lock_default_holo_light
    int alp_btn_code_lock_touched_holo_dark -> alp_btn_code_lock_touched_holo_dark
    int alp_btn_code_lock_touched_holo_light -> alp_btn_code_lock_touched_holo_light
    int alp_indicator_code_lock_point_area_default_holo_dark -> alp_indicator_code_lock_point_area_default_holo_dark
    int alp_indicator_code_lock_point_area_default_holo_light -> alp_indicator_code_lock_point_area_default_holo_light
    int aosp_background_holo_dark -> aosp_background_holo_dark
    int aosp_background_holo_light -> aosp_background_holo_light
    int aosp_dialog_full_holo_dark -> aosp_dialog_full_holo_dark
    int aosp_dialog_full_holo_light -> aosp_dialog_full_holo_light
    int aosp_indicator_code_lock_drag_direction_green_up -> aosp_indicator_code_lock_drag_direction_green_up
    int aosp_indicator_code_lock_drag_direction_red_up -> aosp_indicator_code_lock_drag_direction_red_up
    int aosp_indicator_code_lock_point_area_blue_holo -> aosp_indicator_code_lock_point_area_blue_holo
    int aosp_indicator_code_lock_point_area_green_holo -> aosp_indicator_code_lock_point_area_green_holo
    int aosp_indicator_code_lock_point_area_red_holo -> aosp_indicator_code_lock_point_area_red_holo
group.pals.android.lib.ui.lockpattern.R$id -> group.pals.android.lib.ui.lockpattern.k:
    int alp_cancel -> alp_cancel
    int alp_confirm -> alp_confirm
    int alp_footer -> alp_footer
    int alp_info -> alp_info
    int alp_lock_pattern -> alp_lock_pattern
group.pals.android.lib.ui.lockpattern.R$integer -> group.pals.android.lib.ui.lockpattern.l:
    int alp_lib_version_code -> alp_lib_version_code
    int alp_pkey_display_captcha_wired_dots_default -> alp_pkey_display_captcha_wired_dots_default
    int alp_pkey_display_max_retry_default -> alp_pkey_display_max_retry_default
    int alp_pkey_display_min_wired_dots_default -> alp_pkey_display_min_wired_dots_default
group.pals.android.lib.ui.lockpattern.R$layout -> group.pals.android.lib.ui.lockpattern.m:
    int alp_lock_pattern_activity -> alp_lock_pattern_activity
    int alp_lock_pattern_activity_land -> alp_lock_pattern_activity_land
    int alp_lock_pattern_view -> alp_lock_pattern_view
group.pals.android.lib.ui.lockpattern.R$string -> group.pals.android.lib.ui.lockpattern.n:
    int alp_cmd_confirm -> alp_cmd_confirm
    int alp_cmd_continue -> alp_cmd_continue
    int alp_cmd_retry -> alp_cmd_retry
    int alp_lib_name -> alp_lib_name
    int alp_lib_version_name -> alp_lib_version_name
    int alp_lockscreen_access_pattern_cell_added -> alp_lockscreen_access_pattern_cell_added
    int alp_lockscreen_access_pattern_cleared -> alp_lockscreen_access_pattern_cleared
    int alp_lockscreen_access_pattern_detected -> alp_lockscreen_access_pattern_detected
    int alp_lockscreen_access_pattern_start -> alp_lockscreen_access_pattern_start
    int alp_msg_connect_4dots -> alp_msg_connect_4dots
    int alp_msg_draw_an_unlock_pattern -> alp_msg_draw_an_unlock_pattern
    int alp_msg_draw_pattern_to_unlock -> alp_msg_draw_pattern_to_unlock
    int alp_msg_pattern_recorded -> alp_msg_pattern_recorded
    int alp_msg_redraw_pattern_to_confirm -> alp_msg_redraw_pattern_to_confirm
    int alp_msg_release_finger_when_done -> alp_msg_release_finger_when_done
    int alp_msg_try_again -> alp_msg_try_again
    int alp_msg_your_new_unlock_pattern -> alp_msg_your_new_unlock_pattern
    int alp_pkey_display_captcha_wired_dots -> alp_pkey_display_captcha_wired_dots
    int alp_pkey_display_max_retry -> alp_pkey_display_max_retry
    int alp_pkey_display_min_wired_dots -> alp_pkey_display_min_wired_dots
    int alp_pkey_display_stealth_mode -> alp_pkey_display_stealth_mode
    int alp_pkey_sys_auto_save_pattern -> alp_pkey_sys_auto_save_pattern
    int alp_pkey_sys_encrypter_class -> alp_pkey_sys_encrypter_class
    int alp_pkey_sys_pattern -> alp_pkey_sys_pattern
    int alp_pmsg_connect_x_dots -> alp_pmsg_connect_x_dots
group.pals.android.lib.ui.lockpattern.R$style -> group.pals.android.lib.ui.lockpattern.o:
    int AOSP_DialogWindowTitle -> AOSP_DialogWindowTitle
    int Alp_BaseThemeHelper_Dark -> Alp_BaseThemeHelper_Dark
    int Alp_BaseThemeHelper_Dialog_Dark -> Alp_BaseThemeHelper_Dialog_Dark
    int Alp_BaseThemeHelper_Dialog_Light -> Alp_BaseThemeHelper_Dialog_Light
    int Alp_BaseThemeHelper_Light -> Alp_BaseThemeHelper_Light
    int Alp_BaseTheme_Dark -> Alp_BaseTheme_Dark
    int Alp_BaseTheme_Dialog_Dark -> Alp_BaseTheme_Dialog_Dark
    int Alp_BaseTheme_Dialog_Light -> Alp_BaseTheme_Dialog_Light
    int Alp_BaseTheme_Light -> Alp_BaseTheme_Light
    int Alp_Theme_Dark -> Alp_Theme_Dark
    int Alp_Theme_Dialog_Dark -> Alp_Theme_Dialog_Dark
    int Alp_Theme_Dialog_Light -> Alp_Theme_Dialog_Light
    int Alp_Theme_Light -> Alp_Theme_Light
    int alp_button_bar_button_style -> alp_button_bar_button_style
    int alp_button_bar_style -> alp_button_bar_style
group.pals.android.lib.ui.lockpattern.collect.Lists -> group.pals.android.lib.ui.lockpattern.a.a:
    java.util.ArrayList newArrayList() -> a
group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper -> group.pals.android.lib.ui.lockpattern.demo.a:
    android.app.Activity mActivity -> a
    group.pals.android.lib.ui.lockpattern.demo.PreferenceHolder mPreferenceHolder -> b
    android.preference.Preference$OnPreferenceClickListener mCmdCreatePatternListener -> c
    android.preference.Preference$OnPreferenceClickListener mCmdEnterPatternListener -> d
    android.preference.Preference$OnPreferenceClickListener mCmdVerifyCaptchaListener -> e
    void init() -> a
    int getThemeForLockPatternActivity(android.content.Context) -> a
    android.app.Activity access$0(group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper) -> a
group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper$1 -> group.pals.android.lib.ui.lockpattern.demo.b:
    group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper$2 -> group.pals.android.lib.ui.lockpattern.demo.c:
    group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper$3 -> group.pals.android.lib.ui.lockpattern.demo.d:
    group.pals.android.lib.ui.lockpattern.demo.CommandsPrefsHelper this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper -> group.pals.android.lib.ui.lockpattern.demo.e:
    java.lang.String CLASSNAME -> a
    android.content.Context mContext -> b
    group.pals.android.lib.ui.lockpattern.demo.PreferenceHolder mPreferenceHolder -> c
    android.preference.Preference$OnPreferenceClickListener mCmdShowAlpLicense -> d
    android.preference.Preference$OnPreferenceClickListener mCmdAboutListener -> e
    void init() -> a
    android.content.Context access$0(group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper) -> a
group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$1 -> group.pals.android.lib.ui.lockpattern.demo.f:
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper access$0(group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$1) -> a
group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$1$1 -> group.pals.android.lib.ui.lockpattern.demo.g:
    int mOrientation -> a
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$1 this$1 -> b
    android.app.Dialog val$dialog -> c
    void onGlobalLayout() -> onGlobalLayout
group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$1$2 -> group.pals.android.lib.ui.lockpattern.demo.h:
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$1 this$1 -> a
    android.app.Dialog val$dialog -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$dialogOnGlobalLayoutListener -> c
    void onDismiss(android.content.DialogInterface) -> onDismiss
group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$2 -> group.pals.android.lib.ui.lockpattern.demo.i:
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper access$0(group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$2) -> a
group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$2$1 -> group.pals.android.lib.ui.lockpattern.demo.j:
    group.pals.android.lib.ui.lockpattern.demo.InfosPrefsHelper$2 this$1 -> a
    void onClick(android.view.View) -> onClick
group.pals.android.lib.ui.lockpattern.demo.LPEncrypter -> group.pals.android.lib.ui.lockpattern.demo.k:
    char[] encrypt(android.content.Context,char[]) -> a
group.pals.android.lib.ui.lockpattern.demo.MainActivity -> group.pals.android.lib.ui.lockpattern.demo.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference -> group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference:
    java.lang.String CLASSNAME -> a
    android.widget.TextView mTextNumber -> b
    android.view.View mBtnIncrease -> c
    android.view.View mBtnDecrease -> d
    int mMin -> e
    int mMax -> f
    int mIncrement -> g
    int mCurrentValue -> h
    int mDelta -> i
    android.view.View$OnClickListener mBtnChangeValueOnClickListener -> j
    void showDialog(android.os.Bundle) -> showDialog
    void onBindDialogView(android.view.View) -> onBindDialogView
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void onDialogClosed(boolean) -> onDialogClosed
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void updateUI() -> a
    int access$0(group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference) -> a
    int access$1(group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference) -> b
    void access$2(group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference,int) -> a
    void access$3(group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference) -> c
group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference$1 -> group.pals.android.lib.ui.lockpattern.demo.l:
    group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference this$0 -> a
    void onClick(android.view.View) -> onClick
group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference$SavedState -> group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference$SavedState:
    int mValue -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference$SavedState$1 -> group.pals.android.lib.ui.lockpattern.demo.m:
    group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference$SavedState createFromParcel(android.os.Parcel) -> a
    group.pals.android.lib.ui.lockpattern.demo.NumberPickerPreference$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
group.pals.android.lib.ui.lockpattern.demo.PreferenceHolder -> group.pals.android.lib.ui.lockpattern.demo.n:
    android.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
group.pals.android.lib.ui.lockpattern.demo.PrefsActivity -> group.pals.android.lib.ui.lockpattern.demo.PrefsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11 -> group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11:
    void onBuildHeaders(java.util.List) -> onBuildHeaders
group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11$Fragment_Prefs_Commands -> group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11$Fragment_Prefs_Commands:
    void onCreate(android.os.Bundle) -> onCreate
group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11$Fragment_Prefs_Infos -> group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11$Fragment_Prefs_Infos:
    void onCreate(android.os.Bundle) -> onCreate
group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11$Fragment_Prefs_Settings -> group.pals.android.lib.ui.lockpattern.demo.PrefsActivity_v11$Fragment_Prefs_Settings:
    void onCreate(android.os.Bundle) -> onCreate
group.pals.android.lib.ui.lockpattern.demo.R -> group.pals.android.lib.ui.lockpattern.demo.o:
group.pals.android.lib.ui.lockpattern.demo.R$styleable -> group.pals.android.lib.ui.lockpattern.demo.p:
    int[] NumberPickerPreference -> NumberPickerPreference
    int NumberPickerPreference_increment -> NumberPickerPreference_increment
    int NumberPickerPreference_max -> NumberPickerPreference_max
    int NumberPickerPreference_min -> NumberPickerPreference_min
group.pals.android.lib.ui.lockpattern.demo.ViewTreeObserverCompat_v16 -> group.pals.android.lib.ui.lockpattern.demo.q:
    void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> a
group.pals.android.lib.ui.lockpattern.prefs.DisplayPrefs -> group.pals.android.lib.ui.lockpattern.b.a:
    boolean isStealthMode(android.content.Context) -> a
    int getMinWiredDots(android.content.Context) -> b
    int getMaxRetry(android.content.Context) -> c
    int getCaptchaWiredDots(android.content.Context) -> d
group.pals.android.lib.ui.lockpattern.prefs.Prefs -> group.pals.android.lib.ui.lockpattern.b.b:
    java.lang.String genPreferenceFilename(android.content.Context) -> e
    android.content.SharedPreferences p(android.content.Context) -> f
    void setupPreferenceManager(android.content.Context,android.preference.PreferenceManager) -> a
group.pals.android.lib.ui.lockpattern.prefs.SecurityPrefs -> group.pals.android.lib.ui.lockpattern.b.c:
    boolean isAutoSavePattern(android.content.Context) -> a
    void setAutoSavePattern(android.content.Context,boolean) -> a
    char[] getPattern(android.content.Context) -> b
    void setPattern(android.content.Context,char[]) -> a
    char[] getEncrypterClass(android.content.Context) -> c
    void setEncrypterClass(android.content.Context,java.lang.Class) -> a
    void setEncrypterClass(android.content.Context,char[]) -> b
group.pals.android.lib.ui.lockpattern.util.IEncrypter -> group.pals.android.lib.ui.lockpattern.c.a:
    char[] encrypt(android.content.Context,char[]) -> a
group.pals.android.lib.ui.lockpattern.util.InvalidEncrypterException -> group.pals.android.lib.ui.lockpattern.c.b:
group.pals.android.lib.ui.lockpattern.util.UI -> group.pals.android.lib.ui.lockpattern.c.c:
    java.lang.String CLASSNAME -> a
    void adjustDialogSizeForLargeScreen(android.app.Dialog) -> a
    void adjustDialogSizeForLargeScreen(android.view.Window) -> a
    int resolveAttribute(android.content.Context,int) -> a
group.pals.android.lib.ui.lockpattern.widget.LockPatternUtils -> group.pals.android.lib.ui.lockpattern.widget.a:
    java.lang.String CLASSNAME -> a
    java.util.List stringToPattern(java.lang.String) -> a
    java.lang.String patternToString(java.util.List) -> a
    java.lang.String patternToSha1(java.util.List) -> b
    java.util.ArrayList genCaptchaPattern(int) -> a
group.pals.android.lib.ui.lockpattern.widget.LockPatternView -> group.pals.android.lib.ui.lockpattern.widget.LockPatternView:
    boolean mDrawingProfilingStarted -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mPathPaint -> c
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$OnPatternListener mOnPatternListener -> d
    java.util.ArrayList mPattern -> e
    boolean[][] mPatternDrawLookup -> f
    float mInProgressX -> g
    float mInProgressY -> h
    long mAnimatingPeriodStart -> i
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode mPatternDisplayMode -> j
    boolean mInputEnabled -> k
    boolean mInStealthMode -> l
    boolean mEnableHapticFeedback -> m
    boolean mPatternInProgress -> n
    float mDiameterFactor -> o
    int mStrokeAlpha -> p
    float mHitFactor -> q
    float mSquareWidth -> r
    float mSquareHeight -> s
    android.graphics.Bitmap mBitmapBtnDefault -> t
    android.graphics.Bitmap mBitmapBtnTouched -> u
    android.graphics.Bitmap mBitmapCircleDefault -> v
    android.graphics.Bitmap mBitmapCircleGreen -> w
    android.graphics.Bitmap mBitmapCircleRed -> x
    android.graphics.Bitmap mBitmapArrowGreenUp -> y
    android.graphics.Bitmap mBitmapArrowRedUp -> z
    android.graphics.Path mCurrentPath -> A
    android.graphics.Rect mInvalidate -> B
    int mBitmapWidth -> C
    int mBitmapHeight -> D
    int mAspect -> E
    android.graphics.Matrix mArrowMatrix -> F
    android.graphics.Matrix mCircleMatrix -> G
    int mPadding -> H
    int mPaddingLeft -> I
    int mPaddingRight -> J
    int mPaddingTop -> K
    int mPaddingBottom -> L
    android.content.Context mContext -> M
    android.graphics.Bitmap getBitmapFor(int) -> a
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(group.pals.android.lib.ui.lockpattern.widget.LockPatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode,java.util.List) -> a
    void setDisplayMode(group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode) -> setDisplayMode
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode getDisplayMode() -> getDisplayMode
    java.util.List getPattern() -> getPattern
    void notifyCellAdded() -> b
    void notifyPatternStarted() -> c
    void notifyPatternDetected() -> d
    void notifyPatternCleared() -> e
    void clearPattern() -> a
    void resetPattern() -> f
    void clearPatternDrawLookup() -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int resolveMeasured(int,int) -> a
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell detectAndAddHit(float,float) -> a
    void addCellToPattern(group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell) -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell checkForNewHit(float,float) -> b
    int getRowHit(float) -> a
    int getColumnHit(float) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleActionMove(android.view.MotionEvent) -> a
    void sendAccessEvent(int) -> b
    void handleActionUp(android.view.MotionEvent) -> b
    void handleActionDown(android.view.MotionEvent) -> c
    float getCenterXForColumn(int) -> c
    float getCenterYForRow(int) -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawArrow(android.graphics.Canvas,float,float,group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell,group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell) -> a
    void drawCircle(android.graphics.Canvas,int,int,boolean) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell -> group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell:
    int mRow -> a
    int mColumn -> b
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell[][] sCells -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getRow() -> a
    int getColumn() -> b
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell of(int,int) -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell of(int) -> a
    void checkRange(int,int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell$1 -> group.pals.android.lib.ui.lockpattern.widget.b:
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell createFromParcel(android.os.Parcel) -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$Cell[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode -> group.pals.android.lib.ui.lockpattern.widget.c:
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode Correct -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode Animate -> b
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode Wrong -> c
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode[] ENUM$VALUES -> d
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode[] values() -> values
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
group.pals.android.lib.ui.lockpattern.widget.LockPatternView$OnPatternListener -> group.pals.android.lib.ui.lockpattern.widget.d:
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternCellAdded(java.util.List) -> b
    void onPatternDetected(java.util.List) -> a
group.pals.android.lib.ui.lockpattern.widget.LockPatternView$SavedState -> group.pals.android.lib.ui.lockpattern.widget.LockPatternView$SavedState:
    java.lang.String mSerializedPattern -> a
    int mDisplayMode -> b
    boolean mInputEnabled -> c
    boolean mInStealthMode -> d
    boolean mTactileFeedbackEnabled -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSerializedPattern() -> a
    int getDisplayMode() -> b
    boolean isInputEnabled() -> c
    boolean isInStealthMode() -> d
    boolean isTactileFeedbackEnabled() -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
group.pals.android.lib.ui.lockpattern.widget.LockPatternView$SavedState$1 -> group.pals.android.lib.ui.lockpattern.widget.e:
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$SavedState createFromParcel(android.os.Parcel) -> a
    group.pals.android.lib.ui.lockpattern.widget.LockPatternView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
group.pals.android.lib.ui.lockpattern.widget.LockPatternViewCompat -> group.pals.android.lib.ui.lockpattern.widget.f:
    void announceForAccessibility(android.view.View,android.content.Context,int) -> a
group.pals.android.lib.ui.lockpattern.widget.LockPatternView_v14 -> group.pals.android.lib.ui.lockpattern.widget.LockPatternView_v14:
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> a
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
